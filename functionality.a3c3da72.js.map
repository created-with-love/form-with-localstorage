{"version":3,"sources":["createMessage.js","functionality.js"],"names":["createFeedbackMsg","name","message","id","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","deleteMessage","document","querySelector","remove","inputName","submitBtn","feedbacklist","onDeleteBtnClick","e","target","nodeName","classList","contains","feedbackCounter","childElementCount","textContent","onEditBtnClick","console","log","currentMessageID","currentControlsBox","currentinputName","currentTextArea","style","removeAttribute","insertAdjacentHTML","createSaveBtn","onSaveBtnClick","currentEditBtn","setAttribute","addEventListener","value"],"mappings":";AAqCC,aArCM,SAASA,EAAkBC,EAAMC,EAASC,GAG7CC,IAAAA,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cAI4BV,OAHzCC,EAAQM,EAAK,IAAMJ,EAAK,IAAMM,EAGWT,gDAAAA,OAAAA,EAI6BA,mNAAAA,OAAAA,EAAcF,aAAAA,OAAAA,EAErDG,uEAAAA,OAAAA,EAIsCD,wJAAAA,OAAAA,EAC3DD,gCAAAA,OAAAA,EAIsBC,gGAAAA,OAAAA,EACkBA,4DAAAA,OAAAA,EAAWA,UAAAA,OAAAA,EACTA,oFAAAA,OAAAA,EAlBtD,yCAyBK,SAASW,EAAcX,GACHY,SAASC,cAA0Bb,YAAAA,OAAAA,IAC3Cc,SAClB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,QAAA,cAAA;;ACoED,aAtGA,IAAA,EAAA,QAAA,sBAHMC,EAAYH,SAASC,cAAc,eACnCG,EAAYJ,SAASC,cAAc,eACnCI,EAAeL,SAASC,cAAc,kBAoB5C,SAASK,EAAiBC,GAClBA,GAAsB,WAAtBA,EAAEC,OAAOC,UAGTF,EAAEC,OAAOE,UAAUC,SAAS,UAAW,EACzBJ,EAAAA,EAAAA,eAAAA,EAAEC,OAAOE,UAAU,IAEtBE,IAAAA,EAAkBZ,SAASC,cAAc,qBAC3BD,SAASC,cAAc,kBACTY,kBAAmB,GAEhC,IAClBD,EAAgBE,YAAc,qDAU9C,SAASC,EAAeR,GAChBA,GAAsB,WAAtBA,EAAEC,OAAOC,WACbO,QAAQC,IAAIV,EAAEC,OAAOE,WAEhBH,EAAEC,OAAOE,UAAUC,SAAS,SAAS,CAC/BO,IAAAA,EAAoBX,EAAEC,OAAOE,UAAU,GACvCS,EAAqBnB,SAASC,cAA2BiB,aAAAA,OAAAA,IAEzDE,EAAmBpB,SAASC,cAA6BiB,eAAAA,OAAAA,IACzDG,EAAkBrB,SAASC,cAA2BiB,aAAAA,OAAAA,IAC5DG,EAAgBC,MAAQ,2BAEFtB,SAASC,cAAuBiB,SAAAA,OAAAA,IACxCI,MAAQ,iBAEtBF,EAAiBE,MAAQ,uEACzBF,EAAiBG,gBAAgB,YACjCF,EAAgBE,gBAAgB,YAEjCJ,EAAmBK,mBAAmB,aAAcC,EAAcP,KAM1E,SAASO,EAAcrC,GAE6BA,MAAAA,uDAAAA,OAAAA,EAAWA,UAAAA,OAAAA,EAD3D,8BAKJ,SAASsC,EAAenB,GAChBA,GAAsB,WAAtBA,EAAEC,OAAOC,SAATF,CAEEW,IAAAA,EAAoBX,EAAEC,OAAOE,UAAU,GACvCU,EAAmBpB,SAASC,cAA6BiB,eAAAA,OAAAA,IACzDG,EAAkBrB,SAASC,cAA2BiB,aAAAA,OAAAA,IACtDS,EAAiB3B,SAASC,cAAuBiB,SAAAA,OAAAA,IAGnDX,GAAAA,EAAEC,OAAOE,UAAUC,SAAS,QAC5BS,EAAiBQ,aAAa,YAAY,GAC1CP,EAAgBO,aAAa,YAAY,GACzCR,EAAiBE,MAAQ,+CAEFtB,SAASC,cAAuBiB,SAAAA,OAAAA,IACxChB,SAEfmB,EAAgBC,MAAQ,wCACxBK,EAAeL,MAAQ,0BAvF/BnB,EAAU0B,iBAAiB,QAAS,WAChC1B,EAAU2B,MAAQ,KAKtB3B,EAAU0B,iBAAiB,OAAQ,WACP,KAApB1B,EAAU2B,QACV3B,EAAU2B,MAAQ,cAI1BzB,EAAawB,iBAAiB,QAASvB,GACvCD,EAAawB,iBAAiB,QAASd,GACvCV,EAAawB,iBAAiB,QAASH,GAqFvCV,QAAQC,IAAIZ","file":"functionality.a3c3da72.js","sourceRoot":"..","sourcesContent":["export function createFeedbackMsg(name, message, id) {\r\n\r\n// узнаю текущее время для передачи его около имени в отзыве\r\nvar today = new Date();\r\nvar dd = String(today.getDate()).padStart(2, '0');\r\nvar mm = String(today.getMonth() + 1).padStart(2, '0');\r\nvar yyyy = today.getFullYear();\r\n    today = mm + '/' + dd + '/' + yyyy;\r\n    \r\n  return `\r\n  <li class=\"feedback-message\" id=\"message-${id}\">\r\n    <form class=\"feedback-message__form\">\r\n        <label class=\"feedback-message__item\">\r\n            <span>Пользователь:</span>\r\n            <input type=\"text\" name=\"name\" class=\"input-name input-name-${id}\" value=\"${name}\" readonly />\r\n            </br>\r\n            <span>Оставил отзыв: ${today}</span>\r\n        </label>\r\n\r\n        <label class=\"feedback-message__item\">\r\n            <textarea name=\"message\" rows=\"6\" class=\"textarea textarea-${id} ta\" readonly>\r\n            ${message}\r\n            </textarea>\r\n        </label>\r\n    </form>\r\n    <div class=\"controls controls-${id}\">\r\n      <button type=\"button\" class=\"message-btn edit ${id} edit-${id}\">Редактировать</button>\r\n      <button type=\"button\" class=\"message-btn delete ${id}\">Удалить</button>\r\n    </div>\r\n</li>`;\r\n}\r\n\r\n\r\n\r\nexport function deleteMessage(id) {\r\n    const currentMessage = document.querySelector(`#message-${id}`);\r\n    currentMessage.remove();\r\n}\r\n\r\n\r\n\r\n\r\n","const inputName = document.querySelector('.input-name');\r\nconst submitBtn = document.querySelector('.submit-btn');\r\nconst feedbacklist = document.querySelector('.feedback-list');\r\nimport { deleteMessage } from './createMessage.js'\r\n\r\n\r\ninputName.addEventListener('focus', () => {\r\n    inputName.value = '';\r\n\r\n    \r\n})\r\n\r\ninputName.addEventListener('blur', () => {\r\n    if (inputName.value === '') {\r\n        inputName.value = \"Анонимус\";\r\n    }\r\n})\r\n\r\nfeedbacklist.addEventListener('click', onDeleteBtnClick);\r\nfeedbacklist.addEventListener('click', onEditBtnClick);\r\nfeedbacklist.addEventListener('click', onSaveBtnClick);\r\n\r\nfunction onDeleteBtnClick(e) {\r\n    if (e.target.nodeName !== 'BUTTON') return;\r\n    \r\n    // console.log(e.target.classList[2]);\r\n    if (e.target.classList.contains('delete')) {\r\n        deleteMessage(e.target.classList[2]);\r\n\r\n             const feedbackCounter = document.querySelector('.feedback-counter');\r\n           const feedbacklist1 = document.querySelector('.feedback-list');\r\n            let messagesCount1 = feedbacklist1.childElementCount +1;\r\n\r\n            if (messagesCount1 <= 1) {\r\n                feedbackCounter.textContent = \"Здесь еще нет отзывов, Вы можете оставить первый\";\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n  \r\n}\r\n\r\nfunction onEditBtnClick(e) {\r\n    if (e.target.nodeName !== 'BUTTON') return;\r\n    console.log(e.target.classList)\r\n    \r\n     if (e.target.classList.contains('edit')) {\r\n         const currentMessageID = (e.target.classList[2]);\r\n         const currentControlsBox = document.querySelector(`.controls-${currentMessageID}`)\r\n         \r\n         const currentinputName = document.querySelector(`.input-name-${currentMessageID}`);\r\n         const currentTextArea = document.querySelector(`.textarea-${currentMessageID}`);\r\n         currentTextArea.style = \"background-color: white;\";\r\n\r\n        const currentEditBtn = document.querySelector(`.edit-${currentMessageID}`);\r\n        currentEditBtn.style = \"display: none;\"\r\n         \r\n         currentinputName.style = \"background-color: white; border: 1px solid black; border-radius: 2px\"\r\n         currentinputName.removeAttribute('readonly');\r\n         currentTextArea.removeAttribute('readonly');\r\n         \r\n        currentControlsBox.insertAdjacentHTML('afterbegin', createSaveBtn(currentMessageID))\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction createSaveBtn(id) {\r\n    return `\r\n    <button type=\"button\" class=\"message-btn save ${id} save-${id}\">Сохранить</button>\r\n    `\r\n}\r\n\r\nfunction onSaveBtnClick(e) {\r\n    if (e.target.nodeName !== 'BUTTON') return;\r\n\r\n    const currentMessageID = (e.target.classList[2]);\r\n    const currentinputName = document.querySelector(`.input-name-${currentMessageID}`);\r\n    const currentTextArea = document.querySelector(`.textarea-${currentMessageID}`);\r\n    const currentEditBtn = document.querySelector(`.edit-${currentMessageID}`);\r\n\r\n\r\n    if (e.target.classList.contains('save')) {\r\n        currentinputName.setAttribute('readonly', true);\r\n        currentTextArea.setAttribute('readonly', true);\r\n        currentinputName.style = \"background-color: blanchedalmond; border: 0;\"\r\n        \r\n        const currentSaveBtn = document.querySelector(`.save-${currentMessageID}`);\r\n        currentSaveBtn.remove();\r\n    \r\n        currentTextArea.style = \"background-color: rgb(242, 235, 226);\";\r\n        currentEditBtn.style = \"display: inline-block;\"\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n\r\n// счетчик отзывов\r\n\r\n// const feedbacklist = document.querySelector('.feedback-list');\r\nconsole.log(feedbacklist)"]}